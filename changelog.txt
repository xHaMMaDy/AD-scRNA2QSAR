### QSARify Platform Update: Version 2.0 - The Full Bench
------------------------------------------------
Welcome to the largest update to QSARify yet! We've officially launched the QSARify platform, an end-to-end suite of tools for cheminformatics. This public release introduces our three core applications, a complete visual overhaul, and a robust architecture to accelerate your research from data collection to deployment.

Major New Features: The QSARify Application Suite
------------------------------------------------
Data Collection [ðŸ”¬]: An interactive UI to query, analyze, and visualize bioactivity data directly from the ChEMBL database.
- Live Querying: Fetch bioactivity data for any protein target using its UniProt ID.
- Interactive Visualizations: Automatically generate plots for Activity Distribution (pIC50), Drug-likeness, and Molecular Weight vs. LogP.
- Data Exploration: View and sort the complete, processed dataset in a detailed table and export your results to CSV.

Model Bench [ðŸ§ª]: A complete, step-by-step model training application that guides you through the entire QSAR workflow.
- Data Upload: Upload one or more datasets in .csv or .xlsx format.
- Feature Engineering: Interactively configure feature generation, including molecular fingerprints, physicochemical descriptors, and one-hot encoding.
- Model Training: Select from a wide array of machine learning models (from LogisticRegression to XGBoost) and configure their hyperparameters.
- Evaluation & Comparison: Train multiple models at once and compare them side-by-side with detailed reports, confusion matrices, and overlayed ROC curves.
- Hyperparameter Tuning: Run automated GridSearchCV to find the optimal parameters for your selected model.
- Export: Download your fully trained models as .pkl files and get detailed HTML reports of their performance.

Model Playground [ðŸ§ ]: A dedicated tool to test your own custom-trained models.
- Upload & Predict: Upload any .pkl model file generated from the Model Bench or your own pipeline to start making predictions immediately.
- Dynamic Feature Detection: The playground intelligently inspects your uploaded model and creates UI elements (like dropdowns) if it requires specific inputs (e.g., protein targets).
- Single & Batch Modes: Test your model on individual SMILES strings or in large batches.

General UI/UX Enhancements
-------------------------
- Unified Platform Design: All tools share a cohesive, futuristic dark theme with a consistent "glass-card" style and a new animated background, creating a seamless experience.
- New Navigation Header: A redesigned, fixed header provides easy access to all applications and includes quick links to the GitHub repository and this changelog.
- Interactive Changelog: A new changelog modal, accessible from the header, fetches the latest updates directly from the project's GitHub repository.
- Mobile Responsive Improvements: Enhanced navigation and layout for smaller screens, including a functional mobile menu.
- Custom 404 Page: A polished "Page Not Found" page that matches the new theme and automatically redirects users to the main site.

Backend & Architectural Improvements
-----------------------------------
- Fully Integrated Flask Backend: The entire platform is powered by a single, robust Python backend (app.py) that serves all applications and APIs.
- Robust Training Pipeline: A powerful backend workflow has been built to handle everything from data processing and feature generation to concurrent model training and hyperparameter tuning.
- Stateful Training Workflow: The Model Bench uses server-side session management to maintain your progress through the entire model-building pipeline.
- Modular Prediction Engine: The prediction endpoint for the Model Playground is capable of loading arbitrary user-uploaded models and dynamically adapting to their feature requirements.
